{"version":3,"sources":["webpack:///./src/app/ms-back-office/modules/ms-collections/services/collections-resolve.service.ts","webpack:///./src/app/ms-back-office/modules/ms-collections/services/collections.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n//\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n//\r\nimport { ErrorHandlingService } from '../../../../error-handling/services/error-handling.service';\r\nimport { CollectionsService } from './collections.service';\r\n//import { setTranslations } from '@c/ngx-translate';\r\n\r\nconst errorKey = 'Error';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CollectionsResolveService implements Resolve<any> {\r\n    constructor(\r\n        private collectionsService: CollectionsService,\r\n        private translate: TranslateService,\r\n        private errorHandlingService: ErrorHandlingService) {\r\n        //setTranslations(this.translate, TRANSLATIONS);\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        return this.collectionsService.getAllCollections().pipe(\r\n            map(brands => brands),\r\n            catchError((err) => {\r\n                this.errorHandlingService.handleUiError(errorKey, err);\r\n                return of(null);\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ErrorHandlingHttpService } from '../../../../error-handling/services/error-handling-http.service';\r\n//\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n//\r\nimport { ConfigService } from '../../../../config/services/config.service';\r\nimport { Collection, CollectionsListResponse, CollectionResponse } from '../models/collection';\r\n\r\nexport const ASCENDING = 'asc';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CollectionsService {\r\n\r\n    apiEndpoint: string;\r\n\r\n    previousFilter: any = {};\r\n\r\n    previousSortColumn: string = 'name';\r\n\r\n    previousSortDirection: string = 'asc';\r\n\r\n    previousPageIndex: number = 0;\r\n\r\n    previousPageSize: number = 10;\r\n\r\n    public collectionsList = new BehaviorSubject<CollectionsListResponse>({ dataCount: 0, data: [] });\r\n\r\n    constructor(\r\n        private configService: ConfigService,\r\n        private http: ErrorHandlingHttpService) {\r\n        this.apiEndpoint = this.configService.config.apiConfigs.collections.apiEndpoint;\r\n    }\r\n\r\n    //\r\n    // Begin functions that most services have.\r\n    //\r\n\r\n    getCollections(filter: any, sortColumn: string, sortDirection: string, pageIndex: number, pageSize: number): Observable<CollectionsListResponse> {\r\n        this.previousFilter = filter;\r\n        this.previousSortColumn = sortColumn;\r\n        this.previousSortDirection = sortDirection;\r\n        this.previousPageIndex = pageIndex;\r\n        this.previousPageSize = pageSize;\r\n\r\n        let queryParams = this.formatQueryParams(\r\n            filter,\r\n            sortColumn, sortDirection,\r\n            pageIndex, pageSize);\r\n\r\n        return this.http.get<CollectionsListResponse>(this.apiEndpoint + queryParams);\r\n    }\r\n\r\n    //\r\n    // Call this function to repeat the previous query, after deleting\r\n    // a brand for example.\r\n    //\r\n\r\n    reloadCollections(): Observable<CollectionsListResponse> {\r\n        return this.getCollections(\r\n            this.previousFilter,\r\n            this.previousSortColumn, this.previousSortDirection,\r\n            this.previousPageIndex, this.previousPageSize);\r\n    }\r\n\r\n    postCollection(data: Collection): Observable<Collection> {\r\n        return this.http.post<Collection>(this.apiEndpoint, JSON.stringify(data));\r\n    }\r\n\r\n    getCollection(id: string): Observable<CollectionResponse> {\r\n        return this.http.get<CollectionResponse>(this.apiEndpoint + id + '/');\r\n    }\r\n\r\n    putCollection(data: Collection): Observable<Collection> {\r\n        return this.http.put<Collection>(this.apiEndpoint + data.id + '/', JSON.stringify(data));\r\n    }\r\n\r\n    deleteCollection(id: string): Observable<any> {\r\n        return this.http.delete<any>(this.apiEndpoint + id + '/');\r\n    }\r\n\r\n    formatQueryParams(filter?: any, sortColumn?: string, sortDirection?: string, pageIndex?: number, pageSize?: number): string {\r\n        let queryParams = '';\r\n\r\n        if (sortColumn) {\r\n            let ordering = '';\r\n\r\n            if (sortDirection === 'desc') {\r\n                ordering = '-';\r\n            }\r\n            ordering += sortColumn;\r\n            queryParams += queryParams.length > 0 ? '&' : '?';\r\n            queryParams += `ordering=${ordering}`;\r\n        }\r\n\r\n        if (pageIndex !== undefined) {\r\n            queryParams += queryParams.length > 0 ? '&' : '?';\r\n            queryParams += `offset=${pageIndex * pageSize}`;\r\n        }\r\n\r\n        if (pageSize !== undefined) {\r\n            queryParams += queryParams.length > 0 ? '&' : '?';\r\n            queryParams += `limit=${pageSize}`;\r\n        }\r\n\r\n        if (filter.name && filter.name.length > 0) {\r\n            queryParams += queryParams.length > 0 ? '&' : '?';\r\n            queryParams += `name=${filter.name}`;\r\n        }\r\n\r\n        if (filter.brand && filter.brand.length > 0) {\r\n            queryParams += queryParams.length > 0 ? '&' : '?';\r\n            queryParams += `brand=${filter.brand}`;\r\n        }\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    //\r\n    // End functions that most services have.\r\n    //\r\n\r\n    //\r\n    // Begin special functions specific to only this service.\r\n    //\r\n\r\n    getAllCollections(): Observable<Collection[]> {\r\n        return this.http.get<{ data: Collection[] }>(this.apiEndpoint)\r\n            .pipe(map(response => {\r\n                return response.data;\r\n            }));\r\n    }\r\n\r\n    //\r\n    // End special functions specific to only this service.\r\n    //\r\n\r\n}\r\n\r\n"],"sourceRoot":""}